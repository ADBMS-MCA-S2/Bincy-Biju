
> show dbs\par
admin      0.000GB\par
candidate  0.000GB\par
college    0.000GB\par
config     0.000GB\par
emp        0.000GB\par
employees  0.000GB\par
local      0.000GB\par
> use college\par
switched to db college\par
> show users\par
> db.createUser("bincy")\par
uncaught exception: Error: no 'user' field provided to 'createUser' function :\par
DB.prototype.createUser@src/mongo/shell/db.js:1335:15\par
@(shell):1:1\par
> db.createUser(\{"bincy"\})\par
uncaught exception: SyntaxError: missing : after property id :\par
@(shell):1:22\par
> db.createuser(\{user:"bincy",pwd:"123",roles:[\{role:"readWrite",db:"student"\}]\})\par
uncaught exception: TypeError: db.createuser is not a function :\par
@(shell):1:1\par
> db.createUser(\{user:"bincy",pwd:"123",roles:[\{role:"readWrite",db:"student"\}]\})\par
Successfully added user: \{\par
        "user" : "bincy",\par
        "roles" : [\par
                \{\par
                        "role" : "readWrite",\par
                        "db" : "student"\par
                \}\par
        ]\par
\}\par
> show dbs\par
admin      0.000GB\par
candidate  0.000GB\par
college    0.000GB\par
config     0.000GB\par
emp        0.000GB\par
employees  0.000GB\par
local      0.000GB\par
> db.auth("bincy","123")\par
1\par
> show rows\par
uncaught exception: Error: don't know how to show [rows] :\par
shellHelper.show@src/mongo/shell/utils.js:1211:11\par
shellHelper@src/mongo/shell/utils.js:838:15\par
@(shellhelp2):1:1\par
> db.showUsers\par
college.showUsers\par
> show roles\par
\{\par
        "role" : "read",\par
        "db" : "college",\par
        "isBuiltin" : true,\par
        "roles" : [ ],\par
        "inheritedRoles" : [ ]\par
\}\par
\{\par
        "role" : "enableSharding",\par
        "db" : "college",\par
        "isBuiltin" : true,\par
        "roles" : [ ],\par
        "inheritedRoles" : [ ]\par
\}\par
\{\par
        "role" : "readWrite",\par
        "db" : "college",\par
        "isBuiltin" : true,\par
        "roles" : [ ],\par
        "inheritedRoles" : [ ]\par
\}\par
\{\par
        "role" : "dbAdmin",\par
        "db" : "college",\par
        "isBuiltin" : true,\par
        "roles" : [ ],\par
        "inheritedRoles" : [ ]\par
\}\par
\{\par
        "role" : "dbOwner",\par
        "db" : "college",\par
        "isBuiltin" : true,\par
        "roles" : [ ],\par
        "inheritedRoles" : [ ]\par
\}\par
\{\par
        "role" : "userAdmin",\par
        "db" : "college",\par
        "isBuiltin" : true,\par
        "roles" : [ ],\par
        "inheritedRoles" : [ ]\par
\}\par
> show databases\par
admin      0.000GB\par
candidate  0.000GB\par
college    0.000GB\par
config     0.000GB\par
emp        0.000GB\par
employees  0.000GB\par
local      0.000GB\par
> use school\par
switched to db school\par
> db.createCollection("students")\par
\{ "ok" : 1 \}\par
> db.school.insert(\{regno:"101",name:"Bincy",mark:[chem:"80",phy:"78",bio:"90"]\})\par
uncaught exception: SyntaxError: missing ] after element list :\par
@(shell):1:53\par
> db.students.insert(\{regno:"101",name:"Bincy",mark:[chem:"80",phy:"78",bio:"90"]\})\par
uncaught exception: SyntaxError: missing ] after element list :\par
@(shell):1:55\par
> db.students.insert(\{regno:"101",name:"Bincy",mark:[\{chem:"80"\},\{phy:"78"\},\{bio:"90"\}]\})\par
WriteResult(\{ "nInserted" : 1 \})\par
> db.students.insert(\{regno:"102",name:"sneha",mark:[\{chem:"90"\},\{phy:"88"\},\{bio:"80"\}]\})\par
WriteResult(\{ "nInserted" : 1 \})\par
> db.students.insert(\{regno:"103",name:"Diya",mark:[\{chem:"97"\},\{phy:"88"\},\{bio:"87"\}]\})\par
WriteResult(\{ "nInserted" : 1 \})\par
> db.students.find().pretty()\par
\{\par
        "_id" : ObjectId("62a06c6671761a55fd7551f9"),\par
        "regno" : "101",\par
        "name" : "Bincy",\par
        "mark" : [\par
                \{\par
                        "chem" : "80"\par
                \},\par
                \{\par
                        "phy" : "78"\par
                \},\par
                \{\par
                        "bio" : "90"\par
                \}\par
        ]\par
\}\par
\{\par
        "_id" : ObjectId("62a06c9c71761a55fd7551fa"),\par
        "regno" : "102",\par
        "name" : "sneha",\par
        "mark" : [\par
                \{\par
                        "chem" : "90"\par
                \},\par
                \{\par
                        "phy" : "88"\par
                \},\par
                \{\par
                        "bio" : "80"\par
                \}\par
        ]\par
\}\par
\{\par
        "_id" : ObjectId("62a06cc171761a55fd7551fb"),\par
        "regno" : "103",\par
        "name" : "Diya",\par
        "mark" : [\par
                \{\par
                        "chem" : "97"\par
                \},\par
                \{\par
                        "phy" : "88"\par
                \},\par
                \{\par
                        "bio" : "87"\par
                \}\par
        ]\par
\}\par
> db.students.getIndices()\par
[ \{ "v" : 2, "key" : \{ "_id" : 1 \}, "name" : "_id_" \} ]\par
> db.students.createIndex(\{"101":1\})\par
\{\par
        "numIndexesBefore" : 1,\par
        "numIndexesAfter" : 2,\par
        "createdCollectionAutomatically" : false,\par
        "ok" : 1\par
\}\par
> db.students.getIndices\par
function(filter) \{\par
    var res = this.runCommand("listIndexes", filter);\par
\par
    if (!res.ok) \{\par
        if (res.code == ErrorCodes.NamespaceNotFound) \{\par
            // For compatibility, return []\par
            return [];\par
        \}\par
\par
        throw _getErrorWithCode(res, "listIndexes failed: " + tojson(res));\par
    \}\par
\par
    return new DBCommandCursor(this._db, res).toArray();\par
\}\par
> db.students.getIndices()\par
[\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "_id" : 1\par
                \},\par
                "name" : "_id_"\par
        \},\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "101" : 1\par
                \},\par
                "name" : "101_1"\par
        \}\par
]\par
> db.students.dropIndex(\{"regno":1\})\par
\{\par
        "ok" : 0,\par
        "errmsg" : "can't find index with key: \{ regno: 1.0 \}",\par
        "code" : 27,\par
        "codeName" : "IndexNotFound"\par
\}\par
> db.students.getIndices()\par
[\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "_id" : 1\par
                \},\par
                "name" : "_id_"\par
        \},\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "101" : 1\par
                \},\par
                "name" : "101_1"\par
        \}\par
]\par
> db.students.createIndex(\{"regno":1,"name":1\})\par
\{\par
        "numIndexesBefore" : 2,\par
        "numIndexesAfter" : 3,\par
        "createdCollectionAutomatically" : false,\par
        "ok" : 1\par
\}\par
> db.students.getIndices()\par
[\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "_id" : 1\par
                \},\par
                "name" : "_id_"\par
        \},\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "101" : 1\par
                \},\par
                "name" : "101_1"\par
        \},\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "regno" : 1,\par
                        "name" : 1\par
                \},\par
                "name" : "regno_1_name_1"\par
        \}\par
]\par
> db.students.dropIndex(\{"101":1\})\par
\{ "nIndexesWas" : 3, "ok" : 1 \}\par
> db.students.getIndices()\par
[\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "_id" : 1\par
                \},\par
                "name" : "_id_"\par
        \},\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "regno" : 1,\par
                        "name" : 1\par
                \},\par
                "name" : "regno_1_name_1"\par
        \}\par
]\par
> db.students.find()\par
\{ "_id" : ObjectId("62a06c6671761a55fd7551f9"), "regno" : "101", "name" : "Bincy", "mark" : [ \{ "chem" : "80" \}, \{ "phy" : "78" \}, \{ "bio" : "90" \} ] \}\par
\{ "_id" : ObjectId("62a06c9c71761a55fd7551fa"), "regno" : "102", "name" : "sneha", "mark" : [ \{ "chem" : "90" \}, \{ "phy" : "88" \}, \{ "bio" : "80" \} ] \}\par
\{ "_id" : ObjectId("62a06cc171761a55fd7551fb"), "regno" : "103", "name" : "Diya", "mark" : [ \{ "chem" : "97" \}, \{ "phy" : "88" \}, \{ "bio" : "87" \} ] \}\par
> db.students.createIndex(\{"marks.phy":1\})\par
\{\par
        "numIndexesBefore" : 2,\par
        "numIndexesAfter" : 3,\par
        "createdCollectionAutomatically" : false,\par
        "ok" : 1\par
\}\par
> db.students.getIndices()\par
[\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "_id" : 1\par
                \},\par
                "name" : "_id_"\par
        \},\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "regno" : 1,\par
                        "name" : 1\par
                \},\par
                "name" : "regno_1_name_1"\par
        \},\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "marks.phy" : 1\par
                \},\par
                "name" : "marks.phy_1"\par
        \}\par
]\par
> db.students.dropIndex(\{"marks.phy":1\})\par
\{ "nIndexesWas" : 3, "ok" : 1 \}\par
> db.students.getIndices()\par
[\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "_id" : 1\par
                \},\par
                "name" : "_id_"\par
        \},\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "regno" : 1,\par
                        "name" : 1\par
                \},\par
                "name" : "regno_1_name_1"\par
        \}\par
]\par
> db.db.createCollection("comment")\par
uncaught exception: TypeError: db.db.createCollection is not a function :\par
@(shell):1:1\par
> db.createCollection("comment")\par
\{ "ok" : 1 \}\par
> db.comment.insert(\{name:"sony","post":"hai there"\})\par
WriteResult(\{ "nInserted" : 1 \})\par
> db.comment.insert(\{name:"bincy","post":"hello there"\})\par
WriteResult(\{ "nInserted" : 1 \})\par
> db.comment.insert(\{name:"sneha","post":"thankyou"\})\par
WriteResult(\{ "nInserted" : 1 \})\par
> db.students.find()\par
\{ "_id" : ObjectId("62a06c6671761a55fd7551f9"), "regno" : "101", "name" : "Bincy", "mark" : [ \{ "chem" : "80" \}, \{ "phy" : "78" \}, \{ "bio" : "90" \} ] \}\par
\{ "_id" : ObjectId("62a06c9c71761a55fd7551fa"), "regno" : "102", "name" : "sneha", "mark" : [ \{ "chem" : "90" \}, \{ "phy" : "88" \}, \{ "bio" : "80" \} ] \}\par
\{ "_id" : ObjectId("62a06cc171761a55fd7551fb"), "regno" : "103", "name" : "Diya", "mark" : [ \{ "chem" : "97" \}, \{ "phy" : "88" \}, \{ "bio" : "87" \} ] \}\par
> db.comment.find()\par
\{ "_id" : ObjectId("62a072a871761a55fd7551fc"), "name" : "sony", "post" : "hai there" \}\par
\{ "_id" : ObjectId("62a072c671761a55fd7551fd"), "name" : "bincy", "post" : "hello there" \}\par
\{ "_id" : ObjectId("62a072dc71761a55fd7551fe"), "name" : "sneha", "post" : "thankyou" \}\par
> db.comment.createIndex(\{"post":"text"\})\par
\{\par
        "numIndexesBefore" : 1,\par
        "numIndexesAfter" : 2,\par
        "createdCollectionAutomatically" : false,\par
        "ok" : 1\par
\}\par
> db.comment.find()\par
\{ "_id" : ObjectId("62a072a871761a55fd7551fc"), "name" : "sony", "post" : "hai there" \}\par
\{ "_id" : ObjectId("62a072c671761a55fd7551fd"), "name" : "bincy", "post" : "hello there" \}\par
\{ "_id" : ObjectId("62a072dc71761a55fd7551fe"), "name" : "sneha", "post" : "thankyou" \}\par
> db.students.getIndices()\par
[\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "_id" : 1\par
                \},\par
                "name" : "_id_"\par
        \},\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "regno" : 1,\par
                        "name" : 1\par
                \},\par
                "name" : "regno_1_name_1"\par
        \}\par
]\par
> db.comment.find(\{$text:\{ $search : "\\"hai there\\"" \}\})\par
\{ "_id" : ObjectId("62a072a871761a55fd7551fc"), "name" : "sony", "post" : "hai there" \}\par
> db.comment.find(\{$text:\{ $search : "\\" there\\"" \}\})\par
> db.comment.find(\{$text:\{ $search : "\\" thank\\"" \}\})\par
> db.comment.find(\{$text:\{ $search : "\\" thankyou\\"" \}\})\par
> db.comment.find(\{$text:\{ $search : "\\" hello there\\"" \}\})\par
>\par
>\par
>\par
> db.comment.find(\{$text:\{ $search : "\\"hai there\\"" \}\})\par
\{ "_id" : ObjectId("62a072a871761a55fd7551fc"), "name" : "sony", "post" : "hai there" \}\par
> db.comment.find(\{$text:\{ $search : "\\"hello there\\"" \}\})\par
\{ "_id" : ObjectId("62a072c671761a55fd7551fd"), "name" : "bincy", "post" : "hello there" \}\par
> db.comment.find(\{$text:\{ $search : "\\"thankyou\\"" \}\})\par
\{ "_id" : ObjectId("62a072dc71761a55fd7551fe"), "name" : "sneha", "post" : "thankyou" \}\par
> db.comment.find(\{$text:\{ $search : "\\"thank\\"" \}\})\par
>\par
> db.comment.find(\{$text:\{ $search : "\\"thankyou\\"" \}\})\par
\{ "_id" : ObjectId("62a072dc71761a55fd7551fe"), "name" : "sneha", "post" : "thankyou" \}\par
>\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
Microsoft Windows [Version 10.0.15063]\par
(c) 2017 Microsoft Corporation. All rights reserved.\par
\par
C:\\Users\\19MCA44>mongo\par
MongoDB shell version v5.0.8\par
connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb\par
Implicit session: session \{ "id" : UUID("722c44e4-bc15-49cd-a7f6-e2e9f7d55965") \}\par
MongoDB server version: 5.0.8\par
================\par
Warning: the "mongo" shell has been superseded by "mongosh",\par
which delivers improved usability and compatibility.The "mongo" shell has been deprecated and will be removed in\par
an upcoming release.\par
For installation instructions, see\par
{{\field{\*\fldinst{HYPERLINK https://docs.mongodb.com/mongodb-shell/install/ }}{\fldrslt{https://docs.mongodb.com/mongodb-shell/install/\ul0\cf0}}}}\f0\fs22\par
================\par
---\par
The server generated these startup warnings when booting:\par
        2022-06-08T10:09:58.610+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted\par
---\par
---\par
        Enable MongoDB's free cloud-based monitoring service, which will then receive and display\par
        metrics about your deployment (disk utilization, CPU, operation statistics, etc).\par
\par
        The monitoring data will be available on a MongoDB website with a unique URL accessible to you\par
        and anyone you share the URL with. MongoDB may use this information to make product\par
        improvements and to suggest MongoDB products and deployment options to you.\par
\par
        To enable free monitoring, run the following command: db.enableFreeMonitoring()\par
        To permanently disable this reminder, run the following command: db.disableFreeMonitoring()\par
---\par
> show database\par
uncaught exception: Error: don't know how to show [database] :\par
shellHelper.show@src/mongo/shell/utils.js:1211:11\par
shellHelper@src/mongo/shell/utils.js:838:15\par
@(shellhelp2):1:1\par
> show dbs\par
admin      0.000GB\par
candidate  0.000GB\par
college    0.000GB\par
config     0.000GB\par
emp        0.000GB\par
employees  0.000GB\par
local      0.000GB\par
> use college\par
switched to db college\par
> show users\par
> db.createUser("bincy")\par
uncaught exception: Error: no 'user' field provided to 'createUser' function :\par
DB.prototype.createUser@src/mongo/shell/db.js:1335:15\par
@(shell):1:1\par
> db.createUser(\{"bincy"\})\par
uncaught exception: SyntaxError: missing : after property id :\par
@(shell):1:22\par
> db.createuser(\{user:"bincy",pwd:"123",roles:[\{role:"readWrite",db:"student"\}]\})\par
uncaught exception: TypeError: db.createuser is not a function :\par
@(shell):1:1\par
> db.createUser(\{user:"bincy",pwd:"123",roles:[\{role:"readWrite",db:"student"\}]\})\par
Successfully added user: \{\par
        "user" : "bincy",\par
        "roles" : [\par
                \{\par
                        "role" : "readWrite",\par
                        "db" : "student"\par
                \}\par
        ]\par
\}\par
> show dbs\par
admin      0.000GB\par
candidate  0.000GB\par
college    0.000GB\par
config     0.000GB\par
emp        0.000GB\par
employees  0.000GB\par
local      0.000GB\par
> db.auth("bincy","123")\par
1\par
> show rows\par
uncaught exception: Error: don't know how to show [rows] :\par
shellHelper.show@src/mongo/shell/utils.js:1211:11\par
shellHelper@src/mongo/shell/utils.js:838:15\par
@(shellhelp2):1:1\par
> db.showUsers\par
college.showUsers\par
> show roles\par
\{\par
        "role" : "read",\par
        "db" : "college",\par
        "isBuiltin" : true,\par
        "roles" : [ ],\par
        "inheritedRoles" : [ ]\par
\}\par
\{\par
        "role" : "enableSharding",\par
        "db" : "college",\par
        "isBuiltin" : true,\par
        "roles" : [ ],\par
        "inheritedRoles" : [ ]\par
\}\par
\{\par
        "role" : "readWrite",\par
        "db" : "college",\par
        "isBuiltin" : true,\par
        "roles" : [ ],\par
        "inheritedRoles" : [ ]\par
\}\par
\{\par
        "role" : "dbAdmin",\par
        "db" : "college",\par
        "isBuiltin" : true,\par
        "roles" : [ ],\par
        "inheritedRoles" : [ ]\par
\}\par
\{\par
        "role" : "dbOwner",\par
        "db" : "college",\par
        "isBuiltin" : true,\par
        "roles" : [ ],\par
        "inheritedRoles" : [ ]\par
\}\par
\{\par
        "role" : "userAdmin",\par
        "db" : "college",\par
        "isBuiltin" : true,\par
        "roles" : [ ],\par
        "inheritedRoles" : [ ]\par
\}\par
> show databases\par
admin      0.000GB\par
candidate  0.000GB\par
college    0.000GB\par
config     0.000GB\par
emp        0.000GB\par
employees  0.000GB\par
local      0.000GB\par
> use school\par
switched to db school\par
> db.createCollection("students")\par
\{ "ok" : 1 \}\par
> db.school.insert(\{regno:"101",name:"Bincy",mark:[chem:"80",phy:"78",bio:"90"]\})\par
uncaught exception: SyntaxError: missing ] after element list :\par
@(shell):1:53\par
> db.students.insert(\{regno:"101",name:"Bincy",mark:[chem:"80",phy:"78",bio:"90"]\})\par
uncaught exception: SyntaxError: missing ] after element list :\par
@(shell):1:55\par
> db.students.insert(\{regno:"101",name:"Bincy",mark:[\{chem:"80"\},\{phy:"78"\},\{bio:"90"\}]\})\par
WriteResult(\{ "nInserted" : 1 \})\par
> db.students.insert(\{regno:"102",name:"sneha",mark:[\{chem:"90"\},\{phy:"88"\},\{bio:"80"\}]\})\par
WriteResult(\{ "nInserted" : 1 \})\par
> db.students.insert(\{regno:"103",name:"Diya",mark:[\{chem:"97"\},\{phy:"88"\},\{bio:"87"\}]\})\par
WriteResult(\{ "nInserted" : 1 \})\par
> db.students.find().pretty()\par
\{\par
        "_id" : ObjectId("62a06c6671761a55fd7551f9"),\par
        "regno" : "101",\par
        "name" : "Bincy",\par
        "mark" : [\par
                \{\par
                        "chem" : "80"\par
                \},\par
                \{\par
                        "phy" : "78"\par
                \},\par
                \{\par
                        "bio" : "90"\par
                \}\par
        ]\par
\}\par
\{\par
        "_id" : ObjectId("62a06c9c71761a55fd7551fa"),\par
        "regno" : "102",\par
        "name" : "sneha",\par
        "mark" : [\par
                \{\par
                        "chem" : "90"\par
                \},\par
                \{\par
                        "phy" : "88"\par
                \},\par
                \{\par
                        "bio" : "80"\par
                \}\par
        ]\par
\}\par
\{\par
        "_id" : ObjectId("62a06cc171761a55fd7551fb"),\par
        "regno" : "103",\par
        "name" : "Diya",\par
        "mark" : [\par
                \{\par
                        "chem" : "97"\par
                \},\par
                \{\par
                        "phy" : "88"\par
                \},\par
                \{\par
                        "bio" : "87"\par
                \}\par
        ]\par
\}\par
> db.students.getIndices()\par
[ \{ "v" : 2, "key" : \{ "_id" : 1 \}, "name" : "_id_" \} ]\par
> db.students.createIndex(\{"101":1\})\par
\{\par
        "numIndexesBefore" : 1,\par
        "numIndexesAfter" : 2,\par
        "createdCollectionAutomatically" : false,\par
        "ok" : 1\par
\}\par
> db.students.getIndices\par
function(filter) \{\par
    var res = this.runCommand("listIndexes", filter);\par
\par
    if (!res.ok) \{\par
        if (res.code == ErrorCodes.NamespaceNotFound) \{\par
            // For compatibility, return []\par
            return [];\par
        \}\par
\par
        throw _getErrorWithCode(res, "listIndexes failed: " + tojson(res));\par
    \}\par
\par
    return new DBCommandCursor(this._db, res).toArray();\par
\}\par
> db.students.getIndices()\par
[\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "_id" : 1\par
                \},\par
                "name" : "_id_"\par
        \},\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "101" : 1\par
                \},\par
                "name" : "101_1"\par
        \}\par
]\par
> db.students.dropIndex(\{"regno":1\})\par
\{\par
        "ok" : 0,\par
        "errmsg" : "can't find index with key: \{ regno: 1.0 \}",\par
        "code" : 27,\par
        "codeName" : "IndexNotFound"\par
\}\par
> db.students.getIndices()\par
[\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "_id" : 1\par
                \},\par
                "name" : "_id_"\par
        \},\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "101" : 1\par
                \},\par
                "name" : "101_1"\par
        \}\par
]\par
> db.students.createIndex(\{"regno":1,"name":1\})\par
\{\par
        "numIndexesBefore" : 2,\par
        "numIndexesAfter" : 3,\par
        "createdCollectionAutomatically" : false,\par
        "ok" : 1\par
\}\par
> db.students.getIndices()\par
[\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "_id" : 1\par
                \},\par
                "name" : "_id_"\par
        \},\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "101" : 1\par
                \},\par
                "name" : "101_1"\par
        \},\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "regno" : 1,\par
                        "name" : 1\par
                \},\par
                "name" : "regno_1_name_1"\par
        \}\par
]\par
> db.students.dropIndex(\{"101":1\})\par
\{ "nIndexesWas" : 3, "ok" : 1 \}\par
> db.students.getIndices()\par
[\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "_id" : 1\par
                \},\par
                "name" : "_id_"\par
        \},\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "regno" : 1,\par
                        "name" : 1\par
                \},\par
                "name" : "regno_1_name_1"\par
        \}\par
]\par
> db.students.find()\par
\{ "_id" : ObjectId("62a06c6671761a55fd7551f9"), "regno" : "101", "name" : "Bincy", "mark" : [ \{ "chem" : "80" \}, \{ "phy" : "78" \}, \{ "bio" : "90" \} ] \}\par
\{ "_id" : ObjectId("62a06c9c71761a55fd7551fa"), "regno" : "102", "name" : "sneha", "mark" : [ \{ "chem" : "90" \}, \{ "phy" : "88" \}, \{ "bio" : "80" \} ] \}\par
\{ "_id" : ObjectId("62a06cc171761a55fd7551fb"), "regno" : "103", "name" : "Diya", "mark" : [ \{ "chem" : "97" \}, \{ "phy" : "88" \}, \{ "bio" : "87" \} ] \}\par
> db.students.createIndex(\{"marks.phy":1\})\par
\{\par
        "numIndexesBefore" : 2,\par
        "numIndexesAfter" : 3,\par
        "createdCollectionAutomatically" : false,\par
        "ok" : 1\par
\}\par
> db.students.getIndices()\par
[\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "_id" : 1\par
                \},\par
                "name" : "_id_"\par
        \},\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "regno" : 1,\par
                        "name" : 1\par
                \},\par
                "name" : "regno_1_name_1"\par
        \},\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "marks.phy" : 1\par
                \},\par
                "name" : "marks.phy_1"\par
        \}\par
]\par
> db.students.dropIndex(\{"marks.phy":1\})\par
\{ "nIndexesWas" : 3, "ok" : 1 \}\par
> db.students.getIndices()\par
[\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "_id" : 1\par
                \},\par
                "name" : "_id_"\par
        \},\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "regno" : 1,\par
                        "name" : 1\par
                \},\par
                "name" : "regno_1_name_1"\par
        \}\par
]\par
> db.db.createCollection("comment")\par
uncaught exception: TypeError: db.db.createCollection is not a function :\par
@(shell):1:1\par
> db.createCollection("comment")\par
\{ "ok" : 1 \}\par
> db.comment.insert(\{name:"sony","post":"hai there"\})\par
WriteResult(\{ "nInserted" : 1 \})\par
> db.comment.insert(\{name:"bincy","post":"hello there"\})\par
WriteResult(\{ "nInserted" : 1 \})\par
> db.comment.insert(\{name:"sneha","post":"thankyou"\})\par
WriteResult(\{ "nInserted" : 1 \})\par
> db.students.find()\par
\{ "_id" : ObjectId("62a06c6671761a55fd7551f9"), "regno" : "101", "name" : "Bincy", "mark" : [ \{ "chem" : "80" \}, \{ "phy" : "78" \}, \{ "bio" : "90" \} ] \}\par
\{ "_id" : ObjectId("62a06c9c71761a55fd7551fa"), "regno" : "102", "name" : "sneha", "mark" : [ \{ "chem" : "90" \}, \{ "phy" : "88" \}, \{ "bio" : "80" \} ] \}\par
\{ "_id" : ObjectId("62a06cc171761a55fd7551fb"), "regno" : "103", "name" : "Diya", "mark" : [ \{ "chem" : "97" \}, \{ "phy" : "88" \}, \{ "bio" : "87" \} ] \}\par
> db.comment.find()\par
\{ "_id" : ObjectId("62a072a871761a55fd7551fc"), "name" : "sony", "post" : "hai there" \}\par
\{ "_id" : ObjectId("62a072c671761a55fd7551fd"), "name" : "bincy", "post" : "hello there" \}\par
\{ "_id" : ObjectId("62a072dc71761a55fd7551fe"), "name" : "sneha", "post" : "thankyou" \}\par
> db.comment.createIndex(\{"post":"text"\})\par
\{\par
        "numIndexesBefore" : 1,\par
        "numIndexesAfter" : 2,\par
        "createdCollectionAutomatically" : false,\par
        "ok" : 1\par
\}\par
> db.comment.find()\par
\{ "_id" : ObjectId("62a072a871761a55fd7551fc"), "name" : "sony", "post" : "hai there" \}\par
\{ "_id" : ObjectId("62a072c671761a55fd7551fd"), "name" : "bincy", "post" : "hello there" \}\par
\{ "_id" : ObjectId("62a072dc71761a55fd7551fe"), "name" : "sneha", "post" : "thankyou" \}\par
> db.students.getIndices()\par
[\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "_id" : 1\par
                \},\par
                "name" : "_id_"\par
        \},\par
        \{\par
                "v" : 2,\par
                "key" : \{\par
                        "regno" : 1,\par
                        "name" : 1\par
                \},\par
                "name" : "regno_1_name_1"\par
        \}\par
]\par
> db.comment.find(\{$text:\{ $search : "\\"hai there\\"" \}\})\par
\{ "_id" : ObjectId("62a072a871761a55fd7551fc"), "name" : "sony", "post" : "hai there" \}\par
> db.comment.find(\{$text:\{ $search : "\\" there\\"" \}\})\par
> db.comment.find(\{$text:\{ $search : "\\" thank\\"" \}\})\par
> db.comment.find(\{$text:\{ $search : "\\" thankyou\\"" \}\})\par
> db.comment.find(\{$text:\{ $search : "\\" hello there\\"" \}\})\par
>\par
>\par
>\par
> db.comment.find(\{$text:\{ $search : "\\"hai there\\"" \}\})\par
\{ "_id" : ObjectId("62a072a871761a55fd7551fc"), "name" : "sony", "post" : "hai there" \}\par
> db.comment.find(\{$text:\{ $search : "\\"hello there\\"" \}\})\par
\{ "_id" : ObjectId("62a072c671761a55fd7551fd"), "name" : "bincy", "post" : "hello there" \}\par
> db.comment.find(\{$text:\{ $search : "\\"thankyou\\"" \}\})\par
\{ "_id" : ObjectId("62a072dc71761a55fd7551fe"), "name" : "sneha", "post" : "thankyou" \}\par
> db.comment.find(\{$text:\{ $search : "\\"thank\\"" \}\})\par
>\par
> db.comment.find(\{$text:\{ $search : "\\"thankyou\\"" \}\})\par
\{ "_id" : ObjectId("62a072dc71761a55fd7551fe"), "name" : "sneha", "post" : "thankyou" \}\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
}
�
